// "_id" : ObjectId("5c51c33eae643019c3381430"),

//  24 chars
//  12 bytes
  //  4 bytes : timestamp
  //  3 bytes : machine id
  //  2 bytes : process id
  //  3 bytes : counter

// 1 byte = 8 bits (0 or 1)
// 2 (power 8) = 258 (amount of numbers stored in two bytes)
// 2 (power 24) = 16M (amount of numbers stored in three bytes)

// counter could overflow is more than 16M records storded in same process, same second on same machine.

// id generated by Driver not DB

const mongoose = require('mongoose');

const id = new mongoose.Types.ObjectId();
console.log(id);

console.log(id.getTimestamp());

const ids = [ 'abcdef',
              "kkdkd87238273jr8383",
              "5c530fb0c966ab2f08116cd7",
              "5c51ce1d42ac351abe158ed7"]

ids.forEach((id) => {
  let isValid = mongoose.Types.ObjectId.isValid(id);
  console.log(`${id} valid id? ${isValid}`)
});
